"""
Prueba de conexi√≥n DIRECTA a PostgreSQL sin usar .env
Para descartar problemas con decouple
"""

import psycopg2

print("="*60)
print("PRUEBA DE CONEXI√ìN DIRECTA (sin .env)")
print("="*60)
print()

# Valores hardcodeados basados en tu docker-compose.yml
DB_CONFIG = {
    'database': 'CAMPO_MAN_COGNITIVO',
    'user': 'postgres',
    'password': 'Admin',
    'host': 'localhost',
    'port': '5432'
}

print("üìã Configuraci√≥n de conexi√≥n:")
print(f"   Database: {DB_CONFIG['database']}")
print(f"   User: {DB_CONFIG['user']}")
print(f"   Password: {'*' * len(DB_CONFIG['password'])}")
print(f"   Host: {DB_CONFIG['host']}")
print(f"   Port: {DB_CONFIG['port']}")
print()

print("üîÑ Intentando conectar...")
print()

try:
    connection = psycopg2.connect(**DB_CONFIG)
    
    print("‚úÖ ¬°CONEXI√ìN EXITOSA!")
    print()
    
    cursor = connection.cursor()
    
    # Informaci√≥n de la conexi√≥n
    cursor.execute("SELECT version();")
    version = cursor.fetchone()
    print(f"üìä PostgreSQL: {version[0][:80]}...")
    print()
    
    cursor.execute("SELECT current_database(), current_user;")
    info = cursor.fetchone()
    print(f"üóÑÔ∏è  Base de datos: {info[0]}")
    print(f"üë§ Usuario: {info[1]}")
    print()
    
    cursor.close()
    connection.close()
    
    print("="*60)
    print("‚úÖ LA CONEXI√ìN FUNCIONA")
    print("="*60)
    print()
    print("Esto significa que:")
    print("   ‚úÖ PostgreSQL est√° funcionando correctamente")
    print("   ‚úÖ Las credenciales son correctas")
    print("   ‚úÖ La base de datos existe")
    print()
    print("‚ùì El problema debe estar en:")
    print("   1. El archivo .env no existe o est√° en el lugar equivocado")
    print("   2. El archivo .env tiene formato incorrecto")
    print("   3. Python-decouple no est√° leyendo correctamente el .env")
    print()
    print("üîß SOLUCI√ìN:")
    print("   Ejecuta: python check_config.py")
    print("   Ese script te dir√° exactamente qu√© est√° leyendo Django")
    
except psycopg2.OperationalError as e:
    print("‚ùå ERROR DE CONEXI√ìN")
    print()
    print(f"Mensaje: {e}")
    print()
    
    error_msg = str(e).lower()
    
    if 'authentication failed' in error_msg:
        print("üîê PROBLEMA: Contrase√±a incorrecta")
        print()
        print("La contrase√±a 'Admin' no es correcta.")
        print()
        print("Verifica tu .env de Docker:")
        print("   POSTGRES_PASSWORD=???")
        
    elif 'database' in error_msg and 'does not exist' in error_msg:
        print("üóÑÔ∏è  PROBLEMA: Base de datos no existe")
        print()
        print("Cr√©ala con:")
        print("   docker exec -it campos_maniobras_db psql -U postgres")
        print('   CREATE DATABASE "CAMPO_MAN_COGNITIVO";')
        
    elif 'could not connect' in error_msg:
        print("üîå PROBLEMA: No se puede conectar")
        print()
        print("Verifica:")
        print("   docker-compose ps")
        print("   docker port campos_maniobras_db")
    
    print()
    print("="*60)

except Exception as e:
    print(f"‚ùå ERROR INESPERADO: {e}")
    import traceback
    print()
    print(traceback.format_exc())
